#!/bin/sh
#/ Usage: ghe-s3-restore
#/ Restores backup files from S3.
set -e

# Bring in the backup configuration.
cd $(dirname "$0")/../..
. share/github-backup-utils/ghe-backup-config

# Restore from S3 into a new snapshot directory.
mkdir -p "$GHE_SNAPSHOT_DIR"

LATEST_TARBALL=$(aws s3 ls s3://$GHE_S3_BUCKET/ | tail -1 | awk '{print $4}')
S3_SSE_C_KEY=$(cat "$S3_AES256_KEY_FILE")

#check LATEST_TARBALL to define if there are multiple tarball partitions
if [ "${LATEST_TARBALL##*.}" == "gz" ]; then
#only one tarball file
    aws s3api get-object --sse-customer-algorithm AES256 --sse-customer-key $S3_SSE_C_KEY --bucket $GHE_S3_BUCKET --key $LATEST_TARBALL $GHE_SNAPSHOT_DIR/$LATEST_TARBALL
else
#more than one tarball file
   TAR_FILES=($(aws s3 ls s3://$GHE_S3_BUCKET/${LATEST_TARBALL%.*} | awk '{print $4}'))
   for file in ${TAR_FILES[@]}; do
     echo "download file: $file"
     aws s3api get-object --sse-customer-algorithm AES256 --sse-customer-key $S3_SSE_C_KEY --bucket $GHE_S3_BUCKET --key $file $GHE_SNAPSHOT_DIR/$file
   done
fi

cat $GHE_SNAPSHOT_DIR/*.tar.gz* | tar zxf - -C $GHE_SNAPSHOT_DIR
rm -f $GHE_SNAPSHOT_DIR/*.tar.gz*

# Run the restore script.
ghe-restore -s "$GHE_SNAPSHOT_DIR"
